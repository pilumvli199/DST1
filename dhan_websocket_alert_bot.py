import os
import time
import requests
from dhanhq.marketfeed import MarketFeed # <--- ‡§Ü‡§§‡§æ ‡§•‡•á‡§ü 'dhanhq.marketfeed' ‡§Æ‡§ß‡•Ç‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡•á‡§≤‡§æ

# --- ‡•ß. ‡§ï‡•â‡§®‡•ç‡§´‡§ø‡§ó‡§∞‡•á‡§∂‡§® (Configuration) ---
# Environment Variables ‡§Æ‡§ß‡•Ç‡§® Secrets ‡•≤‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡•á‡§≤‡•á ‡§ú‡§æ‡§§‡•Ä‡§≤.
CLIENT_ID = os.environ.get("DHAN_CLIENT_ID") 
ACCESS_TOKEN = os.environ.get("DHAN_ACCESS_TOKEN") 
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID") 

# HDFC Bank ‡§∏‡§æ‡§†‡•Ä Exchange Segment ‡§Ü‡§£‡§ø Security ID.
# Segment: NSE (Equity), Security ID: 1333
HDFC_ID = '1333'
instruments = [
    # Ticker Subscription ‡§∏‡§æ‡§†‡•Ä 'MarketFeed.Ticker' ‡§µ‡§æ‡§™‡§∞‡§≤‡•á ‡§Ü‡§π‡•á. (‡§Ü‡§§‡§æ ‡§§‡•á MarketFeed ‡§ï‡•ç‡§≤‡§æ‡§∏‡§Æ‡§ß‡•Ç‡§® ‡•≤‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡•á‡§≤‡•á ‡§ú‡§æ‡§à‡§≤)
    (MarketFeed.NSE, HDFC_ID, MarketFeed.Ticker) # Ticker (LTP) ‡§∏‡§æ‡§†‡•Ä 1
]

# ‡§°‡•á‡§ü‡§æ ‡§∏‡§æ‡§†‡§µ‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§ó‡•ç‡§≤‡•ã‡§¨‡§≤ ‡§µ‡•ç‡§π‡•á‡§∞‡§ø‡§è‡§¨‡§≤‡•ç‡§∏
latest_ltp = {HDFC_ID: None}
last_telegram_send_time = time.time()
SEND_INTERVAL_SECONDS = 60 # 60 ‡§∏‡•á‡§ï‡§Ç‡§¶ (1 ‡§Æ‡§ø‡§®‡§ø‡§ü)

# --- ‡•®. Telegram ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ---
def send_telegram_message(ltp_price):
    """LTP ‡§ò‡•á‡§ä‡§® Telegram Bot API ‡§ö‡§æ ‡§µ‡§æ‡§™‡§∞ ‡§ï‡§∞‡•Ç‡§® ‡§Æ‡•á‡§∏‡•á‡§ú ‡§™‡§æ‡§†‡§µ‡§§‡•á."""
    global last_telegram_send_time
    
    timestamp = time.strftime("%H:%M:%S IST")
    
    # ‡•≤‡§≤‡§∞‡•ç‡§ü ‡§´‡•â‡§∞‡•ç‡§Æ‡•Ö‡§ü‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Æ‡•á‡§∏‡•á‡§ú ‡§§‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡§æ
    message = f"""*HDFC BANK LTP ALERT!* üîî
‡§µ‡•á‡§≥: {timestamp}
        
*HDFC BANK*
‡§®‡§µ‡•Ä‡§®‡§§‡§Æ LTP: ‚Çπ *{ltp_price:.2f}*

_‡§π‡§æ ‡•≤‡§≤‡§∞‡•ç‡§ü ‡§¶‡§∞ 1 ‡§Æ‡§ø‡§®‡§ø‡§ü‡§æ‡§®‡•á WebSocket Data ‡§µ‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§Ü‡§π‡•á._"""
    
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message,
        'parse_mode': 'Markdown' 
    }
    try:
        requests.post(url, data=payload)
        print(f"[{timestamp}] Telegram alert sent: ‚Çπ{ltp_price:.2f}")
        last_telegram_send_time = time.time() # ‡§µ‡•á‡§≥ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡§æ

    except Exception as e:
        print(f"Error sending Telegram message: {e}")

# --- ‡•©. WebSocket ‡§°‡•á‡§ü‡§æ ‡§π‡§Å‡§°‡§≤‡§∞ ---
def market_feed_handler(response):
    """WebSocket ‡§ï‡§°‡•Ç‡§® ‡§°‡•á‡§ü‡§æ ‡§Æ‡§ø‡§≥‡§æ‡§≤‡•ç‡§Ø‡§æ‡§µ‡§∞ ‡§ï‡•â‡§≤ ‡§π‡•ã‡§§‡•á."""
    global latest_ltp

    # WebSocket response ‡§Æ‡§ß‡•ç‡§Ø‡•á lastTradedPrice (LTP) ‡§Ü‡§π‡•á ‡§ï‡§æ ‡§§‡•á ‡§§‡§™‡§æ‡§∏‡§æ
    if response and response.get('securityId') == HDFC_ID and response.get('lastTradedPrice'):
        
        ltp = response['lastTradedPrice']
        latest_ltp[HDFC_ID] = ltp
        print(f"Real-time update: HDFCBANK LTP: {ltp}")

        # Telegram ‡§Æ‡•á‡§∏‡•á‡§ú ‡§™‡§æ‡§†‡§µ‡§£‡•ç‡§Ø‡§æ‡§ö‡•Ä ‡§µ‡•á‡§≥ ‡§ù‡§æ‡§≤‡•Ä ‡§Ü‡§π‡•á ‡§ï‡§æ ‡§§‡•á ‡§§‡§™‡§æ‡§∏‡§æ
        current_time = time.time()
        if current_time - last_telegram_send_time >= SEND_INTERVAL_SECONDS:
            send_telegram_message(ltp)

# --- ‡•™. ‡§Æ‡•Å‡§ñ‡•ç‡§Ø WebSocket ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ---
def start_market_feed():
    """Dhan Market Feed WebSocket ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§§‡•á."""
    if not CLIENT_ID or not ACCESS_TOKEN or not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("Error: Environment Variables (DHAN/TELEGRAM) missing. Please set them in Railway.")
        return

    print("DhanHQ WebSocket Service ‡§∏‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á...")
    print(f"HDFCBANK (ID: {HDFC_ID}) ‡§∏‡§æ‡§†‡•Ä ‡§°‡•á‡§ü‡§æ ‡•≤‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡§∞‡§§ ‡§Ü‡§π‡•á.")

    try:
        # ** MarketFeed ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§Ø‡•ã‡§ó‡•ç‡§Ø‡§∞‡§ø‡§§‡•ç‡§Ø‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§Ü‡§π‡•á **
        market_feed = MarketFeed( 
            CLIENT_ID, 
            ACCESS_TOKEN, 
            instruments, 
            version='2.0'
        )
        
        # WebSocket ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ö‡§æ‡§≤‡•Ç ‡§ï‡§∞‡§æ ‡§Ü‡§£‡§ø ‡§Ü‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§°‡•á‡§ü‡§æ‡§∏‡§æ‡§†‡•Ä handler ‡§∏‡•á‡§ü ‡§ï‡§∞‡§æ
        market_feed.run_forever(market_feed_handler)

    except Exception as e:
        print(f"\n--- FATAL MARKET FEED ERROR ---")
        print(f"Error: {e}")
        print("5 ‡§∏‡•á‡§ï‡§Ç‡§¶ ‡§•‡§æ‡§Ç‡§¨‡•Ç‡§® ‡§™‡§∞‡§§ ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§®‡§ö‡§æ ‡§™‡•ç‡§∞‡§Ø‡§§‡•ç‡§® ‡§ï‡§∞‡§§ ‡§Ü‡§π‡•á...")
        time.sleep(5)
        start_market_feed() # reconnection logic

if __name__ == "__main__":
    start_market_feed()
